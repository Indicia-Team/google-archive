<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function species_account_gallery_menu() {
  $items = array();
  $items['species_gallery/%sag_term'] = array(
    'title' => t('Species Gallery'),
    'file' => 'species_account_gallery.pages.inc',
    'page callback' => 'sag_species_gallery',
    'access arguments' => array(),
    'page arguments' => array(1)
  );
  $items['species_gallery'] = array(
    'title' => t('Species Gallery'),
    'file' => 'species_account_gallery.pages.inc',
    'description' => t('Browse the species gallery.'),
    'page callback' => 'sag_species_gallery',
    'access arguments' => array(),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'primary-links'
  );
  $items['admin/settings/species_account_gallery'] = array(
    'title' => t('Species account gallery'),
    'file' => 'species_account_gallery.admin.inc',
    'description' => t('Change settings for the species account gallery.'),
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('species_account_gallery_settings_form'),
    'access arguments' => array('administer species accounts'),
  );
  $items['species_gallery/ajax'] = array(
    'title' => t('Species account gallery ajax'),
    'file' => 'species_account_gallery.pages.inc',
    'page callback' => 'sag_tree_ajax', 
    'access arguments' => array(''),
  );
  return $items;
}

/**
 * Menu load function to load a term from the menu path, allowing pages to be created which 
 * display certain branches of the species hierarchy.
 * @param string $term Term to load
 * @return int Term ID or false if not found.
 */
function sag_term_load($term) {
  $vid = sag_get_vid();
  $db_result = db_query(db_rewrite_sql("SELECT t.tid FROM {term_data} t ".
      "WHERE LOWER(t.name) = LOWER('%s') AND t.vid=%d", 't', 'tid'), trim(urldecode($term)), $vid);
  if ($result = db_fetch_object($db_result)) {
    return $result->tid;
  } else
    return false;
}

/**
 * Retrieve the vocabulary ID for the one to use for generating the gallery hierarchy. If the variable
 * does not exist, we look for a vocab with the default title of Taxonomic hierarchy to use.
 */
function sag_get_vid() {
  $vid = variable_get('sag_vid', 0);
  if (!$vid && ($vocab = db_fetch_object(db_query("select vid from {vocabulary} where name='Taxonomic hierarchy'")))) {
    $vid = $vocab->vid;
    variable_set('sag_vid', $vid);
  }
  return (int)$vid;
}

function species_account_gallery_theme() {
  $theme = array();
  $theme["gallery_tree"] = array(
    'arguments' => array('tree' => NULL)
  );
  return $theme;
}

function theme_gallery_tree($tree) {
  if ($tree) {
    $r = "<ul class=\"species-gallery-list\">\n";
    // loop through the tree nodes in this level (not the same as Drupal nodes!)
    foreach($tree as $node) {
      $tid = $node['tid'];
      if (isset($node['images'])) 
        $class .= ' leaf';
      else 
        $class = variable_get('sag_load_mode', 'full') === 'full' ? '' : 'not-loaded';
      if (isset($node['label'])) {
        $r .= "<li class=\"species-gallery-header $class\">";
        $label = "<span class=\"gallery-label $class\" id=\"tid-$tid\">".$node['label']."</span>";
        if (isset($node['images'])) {
          
          $termnodes = db_query("select tn.nid from {term_node} tn ".
              "inner join {node} n on n.nid=tn.nid and n.type<>'image' ".
              "where tn.tid=%d", $tid);
          if ($termnodes->num_rows===1) {
            $termnode = db_fetch_object($termnodes);
            $r .= '<a href="'.url('node/'.$termnode->nid).'">'.$label.'</a>';
            // blank out the label since it has been output
            $label = '';
          }
        } 
        $r .= $label;
      }
      if (isset($node['children'])) 
        $r .= theme('gallery_tree', $node['children']);
      if (isset($node['images'])) {
        $gallery = variable_get('sag_gallery_mode', 'fancybox');
        $r .= "<ul class=\"gallery-images\">\n";
        foreach($node['images'] as $img)
          $r .= '<li class="species-gallery-image"><a href="'.$img['filepath'].'" class="'.$gallery.'">'.
                theme('imagecache', 'thumbnail', 'species_images/'.$img['filename'], 'Species image', t('Click to enlarge')).
                '</a></li>';
        $r .= "</ul>\n";
      }
      if (isset($node['label'])) 
        $r .= '</li>';
    }
    $r .= "</ul>\n";
    return $r;
  } else {
    return '';
  }
}

function gallery_tree($items, $parents=array(), $nameGroup='') {
  $skip = explode(',', variable_get('sag_hide_ranks', ''));
  $breaks = explode(',', variable_get('sag_page_break_ranks', ''));
  $nameGroups = explode("\n", variable_get('sag_ranks_combine', ''));
  foreach($items as $item) {
    $treenode = array();
    // create a label for the current item. If it should be a link to another page, then
    // make it an anchor.
    if (in_array($item->description, $breaks)) 
      $label = l($item->name, 'species_gallery/'.urlencode($item->name));
    else
      $label = $item->name; 
    $line = array();
    if (empty($nameGroup)) {
      foreach($nameGroups as $group) {
        if (strpos($group, '{'.$item->description.'}')!==false) {
          // rank is part of a name group format
          $nameGroup = $group;
        }
      }
    }
    // look for this taxon rank in the group of names. If the name is supposed to be there
    // but isn't then the name group will get missed out.
    if (!empty($nameGroup) && strpos($nameGroup, '{'.$item->description.'}')!==false) {
      $nameGroup = str_replace('{'.$item->description.'}', $label, $nameGroup);
      if (strpos($nameGroup, '{')===false) {
        // $nameGroup is now complete as there are no more tokens to replace
        $treenode['label'] = $nameGroup;
        // reset it
        $nameGroup = '';
      }
    } elseif (!$item->description || !in_array($item->description, $skip)) {
      $treenode['label'] = $label;
      $nameGroup = '';
    } // else we are skipping this label and progressing to the children
    if (isset($treenode['label']))
      $treenode['tid'] = $item->tid;
    // If this is an rank we should link to a new page after, then don't output children.
    // Also if this is an ajax tree, only load down till we have a label to output.
    if (!in_array($item->description, $breaks) && 
        (variable_get('sag_load_mode', 'full')!=='ajax' || !isset($treenode['label']) || !isset($item->children))) {
      if (isset($item->children)) {
        $parents[] = array('tid'=>$item->tid, 'name'=>$item->name, 'description'=>$item->description);
        if (isset($treenode['label']))
          $treenode['children'] = gallery_tree($item->children, $parents, $nameGroup);
        else 
          return gallery_tree($item->children, $parents, $nameGroup);
        array_pop($parents);
      } else {
        $sql = 'SELECT f.filename, f.filepath '.
          'FROM term_node tn '.
          'INNER JOIN content_type_image cti on cti.nid=tn.nid '.
          'INNER JOIN files f ON f.fid=cti.field_image_fid '.
          'WHERE tn.tid=%d';
        if (variable_get('sag_max_image_weight', '')!=='') 
          $sql .= ' AND cti.field_weight_value<='.variable_get('sag_max_image_weight', '');
        $sql .= ' ORDER BY cti.field_weight_value ASC';
        if (variable_get('sag_max_image_count', '')!=='') 
          $sql .= ' LIMIT '.variable_get('sag_max_image_count', '');
        $imgs = db_query($sql, $item->tid);
        $imgList = array();
        while ($img=db_fetch_array($imgs)) {
          $imgList[] = $img;
        }
        $treenode['images']=$imgList;
      }
    }
    $r[] = $treenode;
  }
  return $r;
}