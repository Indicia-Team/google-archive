<?php
// $Id$

/**
* Implement hook_taxon_formatter_types
*/
function gbif_map_taxon_formatter_types() {
  $formatter = array(
    'gbif_map' => array(
      'title' => t('GBIF Map'),
      'field_type' => 'gbif',
      // function that generates the form using Forms API, with arguments for the current settings values, type name (e.g. gbif_map) and optional $args
      'form_callback' => 'gbif_map_taxon_formatter_settings_form',
      'form_args' => array() // can be used to pass arguments to the form
    )
  );
  return $formatter;
}

/**
 * This defines the drupal form used for the settings of this formatter type.
 */
function gbif_map_taxon_formatter_settings_form($settings, $type, $args) {
  if ($type=='gbif_map') {
    $form = array();
    $form['size'] = array(
      '#type' => 'select',
      '#title' => t('Size'),
      '#description' => t('Displayed map size.'),
      '#required' => TRUE,
      '#options' => array(
        'small'=>'Small (352*212)', 
        'medium'=>'Medium (548x306)',
        'full'=>'Full (730x396)'
      ),
      '#default_value' => $settings['size']
    );    
  }
  return $form;
}

/**
 * Implements the output theme function.
 */
function theme_gbif_map_taxon_formatter_output($element, $preset) {
  $request = 'http://data.gbif.org/species/'.$element['#item']['safe_value'].'/mapWidget?size='.$preset['settings']['size'];
  // the following settings allow an 8px margin. Hopefully GBIF won't change this.
  if ($preset['settings']['size']=='small')
    $size = "width: 400px; height: 228px;";
  elseif ($preset['settings']['size']=='medium')
    $size = "width: 554px; height: 322px;";
  elseif ($preset['settings']['size']=='full')
    $size = "width: 746px; height: 412px;";
  $result = '<iframe style="border: none; '.$size.'" frameborder="0" '.
      'src="'.$request.'"></iframe></div>';
  return $result;  
}

function gbif_map_theme() {
  $theme = array();
  $theme["gbif_map_taxon_formatter_output"] = array(
      'arguments' => array('element' => NULL),
  );
  return $theme;
}