<?php

// Drupal needs this blank file.

/**
 * Implementation of hook_user.
 * Traps login events and ensures the user is registered on the warehouse. Stores the user's ID in the local profile data.
 */
function easy_login_user($op, &$edit, &$account, $category = NULL) {
  static $_updating_account=false;
  if (!$_updating_account) {
    switch ($op) {
      case 'login':
        if (isset($account->profile_indicia_user_id)) {
          drupal_set_message('uid: '.$account->profile_indicia_user_id);
          return;
        }
        // deliberately flow through - as we always check the account id after account update. So do NOT break
      case 'after_update':
        if (empty($account->profile_last name)) {
          drupal_set_message('Please set at least your last name on your '.l('user account', 'user/'.$account->uid.'/edit/Name'). 
              '. This will allow your user registration to be linked properly to the central database of records.');
          return;
        }
        $_updating_account=true;
        iform_load_helpers(array('data_entry_helper'));
        $url = data_entry_helper::$base_url.'index.php/services/user_identifier/get_user_id';
        $identifiers = array(array('type'=>'email','identifier'=>$account->mail));
        // add twitter, fb and openID accounts here
        if (module_exists('twitter')) {
          $twitterAccounts = twitter_get_user_accounts($account->uid);
          foreach ($twitterAccounts as $twitterAccount) {
            $identifiers[] = array('type'=>'twitter', 'identifier'=>$twitterAccount->screen_name);
          }
        }
        $identifiers = urlencode(json_encode($identifiers));
        $auth = data_entry_helper::get_read_write_auth(variable_get('indicia_website_id', ''), variable_get('indicia_password', ''));
        $url .= '?nonce='.$auth['write_tokens']['nonce'].'&auth_token='.$auth['write_tokens']['auth_token'];
        $postargs = 'last_name='.$account->profile_last_name.'&identifiers='.$identifiers;
        if (!empty($account->profile_first_name))
          $postargs .= '&first_name='.$account->profile_first_name;
        $response = data_entry_helper::http_post($url, $postargs);  
        if (preg_match('/^[0-9]+$/', $response['output'])) {
          if ($op==='login') 
            // Can use user_save during a login operation
            if (user_save($account, array('profile_indicia_user_id' => $response['output']), 'Name')===false)
              drupal_set_message(t('Failed to link this user account to the central database user list.'));
          else
            // must set the edit array for the insert or update operation
            $edit['profile_indicia_user_id']=$response['output'];
          drupal_set_message('Set to '.$response['output']);
        } else {
          // output has a problem, so probably json encoded
          $output = json_decode($response['output']);
          if (isset($output->error))
            drupal_set_message($output->error, 'warning');
        }
        $_updating_account=false;
    }
  }
}
