<?php

include_once('survey_summaries.features.inc');

function survey_summaries_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type==='survey_summary')
    switch ($op) {
      case 'view':
        $node->content=array(
          'myfield'=>array(
            '#value'=>survey_summary_build($node)
          )
        );
        break; 
    }
}

function survey_summary_build($node) {
  $surveyId=$node->field_survey_id[0]['value'];
  iform_load_helpers(array('report_helper'));
  $readAuth = report_helper::get_read_auth(variable_get('indicia_website_id', 0), variable_get('indicia_password', ''));
  $arr = helper_base::explode_lines($node->field_survey_summary_output[0]['value']);
  $r = '';
  $currentBlock='';
  $currentOptions=array();
  foreach($arr as $item) {
    if (preg_match('/^\[(?P<ctrl>.+)\]$/', $item, $matches)) {
      if ($fn) 
        $r .= survey_summary_output_block($fn, $readAuth, $surveyId, $currentOptions);
      $fn = 'survey_summary_'.$matches['ctrl'];
      $currentOptions=array();
    } elseif (preg_match('/^@(?P<key>.+)=(?P<value>.+)$/', $item, $matches)) {
      $currentOptions[$matches['key']]=$matches['value'];
    } else drupal_set_message($item);
  }
  if ($fn) 
    $r .= survey_summary_output_block($fn, $readAuth, $surveyId, $currentOptions);
  report_helper::add_resource('defaultStylesheet');
  handle_resources();
  return $r;
}


function survey_summary_output_block($fn, $readAuth, $surveyId, $options) {
  $classes=array('survey-summary-panel');
  if (isset($options['class']))
    $classes[]=$options['class'];
  $r = '<div class="'.implode(' ', $classes).'"';
  $style = array();
  if (isset($options['width']))
    $style[] = 'width: '.$options['width'].'px;';
  if (isset($options['height']))
    $style[] = 'height: '.$options['height'].'px;';
  if (count($style))
    $r .= ' style="'.implode(' ', $style).'"';
  $r .= '>';
  $r .= $fn($readAuth, $surveyId, $options);
  $r .= '</div>';
  return $r;
}

function survey_summary_latest_photos($readAuth, $surveyId, $currentOptions) {
  $options = array_merge(array(
    'itemsPerPage'=>4,
    'galleryColCount'=>4
  ), $currentOptions);
  return report_helper::report_grid(array(
    'id'=>'latest-photos',
    'readAuth' => $readAuth,
    'dataSource'=>'library/occurrence_images/occurrence_image_list',
    'itemsPerPage' => $options['itemsPerPage'],
    'columns' => array(
      array(
        'fieldname' => 'path',
        'template' => '<div class="gallery-item"><a class="fancybox" href="{imageFolder}{path}"><img src="{imageFolder}thumb-{path}" title="{caption}" alt="{caption}"/></a></div>'
      )
    ),
    'includeAllColumns' => false,
    'headers' => false,
    'galleryColCount' => $options['galleryColCount'],
    'extraParams' => array(
      'date_from'=>'',
      'date_to'=>'',
      'survey_id'=>$surveyId,
      'taxon_group_id'=>'',
      'smpattrs'=>'',
      'occattrs'=>''
    )
  ));
}

function survey_summary_recorder_league($readAuth, $surveyId, $currentOptions) {
  $options = array_merge(array(
    'itemsPerPage'=>10,
    'date_from'=>'',
    'date_to'=>'',
  ), $currentOptions);
  global $user;
  profile_load_profile($user);
  return report_helper::report_grid(array(
    'id'=>'recorder-league',
    'readAuth' => $readAuth,
    'dataSource'=>'library/users/species_and_occurrence_counts',
    'itemsPerPage' => $options['itemsPerPage'],
    'columns' => array(
      array('fieldname'=>'username','caption'=>'Recorder'),
      array('fieldname'=>'taxa','caption'=>'Species'),
      array('fieldname'=>'occurrences','caption'=>'Records'),
      array('fieldname'=>'groups','caption'=>'Species Groups'),
    ),
    'includeAllColumns' => false,
    'rowClass'=>'{me}',
    'extraParams' => array(
      'date_from'=>$options['date_from'],
      'date_to'=>$options['date_to'],
      'survey_id'=>$surveyId,
      'taxon_group_id'=>'',
      'smpattrs'=>'',
      'occattrs'=>'',
      'currentUser'=>$user->profile_indicia_user_id
    )
  ));
  
}

function survey_summary_participation_map($readAuth, $surveyId, $currentOptions) {
  iform_load_helpers(array('map_helper'));
  $wmsUrl = map_helper::$geoserver_url.'wms';
  $options = array_merge(array(
    'presetLayers' => array('osm'),
    'editLayer' => false,
    'layers' => array('distLayer'),
    'initial_lat'=>variable_get('indicia_map_centroid_lat', 54),
    'initial_long'=>variable_get('indicia_map_centroid_long', -2),
    'initial_zoom'=>variable_get('indicia_map_zoom', 5),
    'width'=>'100%',
    'height'=>'500',
    'standardControls'=>array('panZoomBar'),
    'featureType'=>'indicia:cache_occurrences'
  ), $currentOptions);
  map_helper::$onload_javascript .= "\n    var filter='survey_id=".$surveyId."';";
  map_helper::$onload_javascript .= "\n    var distLayer = new OpenLayers.Layer.WMS(
          '".lang::get('Participants')."',
          '$wmsUrl',
          {layers: '".$options['featureType']."', transparent: true, CQL_FILTER: filter $style},
          {isBaseLayer: false, sphericalMercator: true, singleTile: true}
    );\n";
  $olOptions = array('theme' => map_helper::$js_path . 'theme/default/style.css');
  return map_helper::map_panel($options, $olOptions);
}

function survey_summary_total($readAuth, $surveyId, $currentOptions) {
  $options = array_merge(array(
    'date_from'=>'',
    'date_to'=>'',
    'template'=>'{species_count} species found so far!'
  ), $currentOptions);
  return report_helper::freeform_report(array(
    'readAuth' => $readAuth,
    'dataSource'=>'library/totals/species_and_occurrence_counts',
    'bands'=>array(array('content'=>$options['template'])),
    'extraParams'=>array('date_from'=>$options['date_from'], 'date_to'=>$options['date_to'], 'survey_id'=>$surveyId)
  ));
  
}