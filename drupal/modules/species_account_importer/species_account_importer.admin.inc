<?php// $Id$/** * Menu callback for the configuration form */function species_account_importer_settings_form() {  require_once ('species_account_importer.defines.inc');  $form = array();  $vocabs = taxonomy_get_vocabularies();  $vocabArr = array();  foreach ($vocabs as $vocab) {    $vocabArr[$vocab->vid] = $vocab->name;  }  $form['sai_vid'] = array(    '#type' => 'select',    '#title' => t('Taxonomy Vocabulary'),    '#description' => t('Select the name of the vocabulary to be used to build the taxonomic '.        'hierarchy associated with the imported species accounts'),    '#options' => $vocabArr,    '#default_value' => sai_get_vid()  );  $form['sai_species_regex'] = array(    '#type' => 'textfield',    '#title' => t('Species Regex'),    '#size' => 100,    '#description' => t('Regular Expression for matching the species name/title'),    '#default_value' => variable_get('sai_species_regex', DEFAULT_SPECIES_REGEX),    '#required' => true  );  $form['sai_species_ignore_regex'] = array(    '#type' => 'textarea',    '#title' => t('Ignore Regexes'),    '#size' => 100,    '#description' => t('Regular Expressions for pattern matching lines to ignore. 1 per line. '.        'Whitespace will be stripped from the line before testing.'),    '#default_value' => variable_get('sai_species_ignore_regex', ''),    '#required' => true,    '#wysiwyg' => false  );  $form['sai_ranks'] = array(    '#type' => 'textarea',    '#title' => t('List of Ranks'),    '#size' => 100,    '#description' => t('List of rank names that can be extracted from the text, in hierarchical '.        'order. Must match the names in the rank regexes.'),    '#default_value' => variable_get('sai_ranks', SAI_DEFAULT_RANKS),    '#required' => true,    '#wysiwyg' => false  );  $form['sai_rank_regexes'] = array(    '#type' => 'textarea',    '#title' => t('Rank Regexes'),    '#size' => 100,    '#description' => t('List of rank match patterns that can be applied to extract the rank names '.        'from the text.'),    '#default_value' => variable_get('sai_rank_regexes', SAI_DEFAULT_RANK_REGEXES),    '#required' => true,    '#wysiwyg' => false  );  $form['sai_extract_genus'] = array(    '#type' => 'checkbox',    '#title' => t('Extract genus'),    '#description' => t('If the species names you provide are binomials, then tick this box to automatically '.        'extract the genus from the name and insert it into the hierarchy of names'),    '#default_value' => variable_get('sai_extract_genus', SAI_DEFAULT_EXTRACT_GENUS)  );  $form['sai_extract_authority_field'] = array(    '#type' => 'textfield',    '#title' => t('Field to extract authority into'),    '#size' => 100,    '#description' => t('If set to the name of a CCK field, and the species names are binomial followed by an authority string, then the '.        'authority string is extracted to this field.'),    '#default_value' => variable_get('sai_extract_authority_field', SAI_DEFAULT_EXTRACT_AUTHORITY_FIELD),    '#required' => false,    '#field_prefix' => 'field_'  );  $form['sai_content_type_rank'] = array(    '#type' => 'checkbox',    '#title' => t('Content Type Rank'),    '#description' => t('Tick this box to insert an extra level at the top of the hierarchy for the content type of the '.        'species page.'),    '#default_value' => variable_get('sai_content_type_rank', SAI_DEFAULT_CONTENT_TYPE_RANK) ? 'checked' : ''  );  $form['submit'] = array(    '#type' => 'submit',    '#value' => t('Save settings')      );   return $form;}/** * Validate method for the config form. */function species_account_importer_settings_form_validate($form, &$form_state) {  // Use @ to remove warnings  if (@preg_match($form_state['values']['sai_species_regex'], '')===false)    form_set_error('sai_species_regex', t('The Species Regex value is not a valid regular expression.'));}/** * Submit method for the config form. */function species_account_importer_settings_form_submit($form, &$form_state) {  variable_set('sai_vid', $form_state['values']['sai_vid']);  variable_set('sai_species_regex', $form_state['values']['sai_species_regex']);  variable_set('sai_species_ignore_regex', $form_state['values']['sai_species_ignore_regex']);  variable_set('sai_ranks', $form_state['values']['sai_ranks']);  variable_set('sai_rank_regexes', $form_state['values']['sai_rank_regexes']);  variable_set('sai_extract_genus', $form_state['values']['sai_extract_genus']);  variable_set('sai_extract_authority_field', $form_state['values']['sai_extract_authority_field']);  variable_set('sai_content_type_rank', $form_state['values']['sai_content_type_rank']);  drupal_set_message(t('Settings saved. '.print_r($form_state['values'], true)));}