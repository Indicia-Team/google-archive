# Explains how to use the Indicia Forgotten Password Control which allows client web site users to reset their password on the indicia core warehouse should they forget it.

= A Guide to the Indicia Forgotten Password Control =

== What it is for ==

The Forgotten Password Control allows a user on a client website to reset their password details held on the indicia core/warehouse. This is most suited to a website which uses the Indicia Login Control as its authentication mechanism and which wishes to allow self-service password resets. The reset request generates an email from indicia core to the user's registered email address with a link to a password reset page.

== The demo page ==

There is a demonstration page giving an example of how this control can be used. The page can be accessed from the demo page index at http://<your-host>/<your-indicia>/modules/demo/ in the 'Web-site User Control Demonstrations' section. The code for the demo page can also be viewed there.

In case you don't have access to a working indicia installation, here is a screen shot.

http://code.google.com/p/indicia/wiki/forgotten_password_control_demo.jpg

== What it does precisely ==

To reset a password with this control, a user must exist on indicia core, have a site role on the website they are logging-in from and not be banned. They must also supply the correct username or email address. The control provides a forgotten password 'widget' which you can put on your password reset page so that your users can enter their user-name or email address. The 'widget' appearance can be styled using CSS to suit your site requirements.  

If the username or email address match a current user on your website, the control triggers an email to their regsitered email address and returns a 'true' response to your site so that you can display an appropriate message. The email contains a link back to the indicia core site with an authorisation key to allow a password reset for that user.

The control has been designed to implement the 'Forgotten Password Control' requirements on page 26 of the 'OPAL Online Recording Tool Requirements document' which can be downloaded from http://code.google.com/p/indicia/downloads/detail?name=requirements_specification_v2.0.doc&can=2&q=

The main text of these requirements is listed below:-

 The Forgotten Password Control is a panel which is placed on a page referred to by the 
 Request Forgotten Password link in the Login control. This provides a text entry box 
 allowing the user to enter their email address and a submit button. On clicking submit, 
 the email address is checked against the list of known users. If valid, an email is sent 
 to the address detailing the password. Otherwise a message is displayed stating that the 
 email address could not be recognised and the user can retype their email address to try 
 again.

== How to use it ==

=== Prerequisites ===

Before using this control, you need;

 # a client indicia website which can access an instance of the indicia core/warehouse. 
 # some users set up on the indicia core and associated with your client site with at least the 'User' role.

=== The Forgotten Password Control widget ===

This provides a standard forgotten password form which can be configured by CSS to match your site style. Using this saves the effort of laying out your own forgotten password form, but you don't have to use this widget, you can always produce your own web UI if you prefer to. There are examples of using this control on the demo page. 

Using the control involves the following steps;

 # require 'client_helpers/user_helper.php' (you may have to amend the relative path).
 # include the indicia forgotten password control in your page where you want the HTML to be output (see following).
 # style the control to match your site using your choice of CSS.

This is an example from the demo, for full list of options, see the interface documentation at the end of this document.

{{{
        <?php // the forgotten password control
        echo user_helper::forgotten_password_control(array(
            'action_url' => '',
            'show_fieldset' => true,
            'login_uri' => $base_url.'modules/demo/login_control.php',
        ));
        ?>
}}}

This example renders the following HTML output on your page.

{{{
<form id="indicia-forgotten-password-control" method="post" action="">
<fieldset>
<legend>Forgotten password user details</legend>
<p>You may enter either your user name or your email address in the field below, and an email will be sent to you. In this email will be a link to a webpage which will allow you to enter a new password. This ensures that only a person with access to your registered email account will be able to change your password.</p>
<label for="userid">User Name or Email Address:</label>
<input type="text" id="userid" name="userid" class=" "  value=""  />
<br/>
</fieldset>
<input type="submit" name="password_email_submit" id="password_email_submit" value="Request Forgotten Password Email" />
<br /><a href="http://localhost/indicia/modules/demo/login_control.php">Return to the login page.</a>
</form>
}}}

=== Calling Indicia core to send the reset password email ===

The Forgotten Password Control form above will post the user input to the page specified by the action attribute on the <form> element. You need to set this to match the page that will process the forgotten password request. 

On your processing page you need to make 2 calls to indicia core, one to get the standard authority tokens for calling indicia services, and the second to request the reset password email. You can set an option to control if the name should be treated as case sensitive or not. These are documented on the interface specification below.

The following shows example code.

{{{
          // ask core whether the service credentials are good for this website.
          $readAuth = user_helper::get_read_auth($website_id, $website_password);
          // make the call to indicia core to request the password reset email
          $response = user_helper::request_password_reset($_POST['userid'], $readAuth);
          // act on the result
          $result = $response['result'];
          if ($result) { // requested successfully
            // inform the user a mail is on the way to them
          } else { // not successful
            // inform the user of the error 
          }
}}}


== Interface documentation. ==

The following is the documentation generated from code comments using phpDocumentor.

=== static method forgotten_password_control [line 270] ===

static string forgotten_password_control( [array $options = array()])

Helper function to output the HTML for a forgotten password form widget.

This is a composite control which presents a configurable collection of input and display controls to support a forgotten password request on a web page. The control is wrapped with a <form> element but you need to specify where the request should be sent for processing.

All the elements in the control are wrapped within a <form> with an id of indicia-forgotten-password-control so if you don't wish to specify classes on all the sub elements you can style them using CSS selectors such as #indicia-forgotten-password-control input[type="text"]

Tags:
return:  	HTML to insert into the page for the login control.
access:  	public

Parameters:
array   	$options   	Options array with the following possibilities:

    * action_url
      Required. String defining the URL which the login data will be sent to for processing.
    * control_method
      Optional. String defining the http method (either post or get) to be used to send the data for processing. Default is 'post'.
    * control_id
      Optional. String defining the id for the enclosing <form>. Default is 'indicia-forgotten-password-control'.
    * show_fieldset
      Optional. Boolean defining if the fields will be contained in a fieldset. Default is false.
    * fieldset_class
      Optional. Only relevant if show_fieldset is true. CSS class names to use on the fieldset element. Default is to omit class attribute.
    * legend_label
      Optional. Only relevant if show_fieldset is true. The text to show on the fieldset legend. Default is 'Forgotten password user details'. Todo: make this default language aware?
    * login_text
      Optional. Explainatory text to be shown before the fields. If 'show_fieldset' is true, the text will be inside the fieldset. Default is 'You may enter either your user name or your email address in the field below, and an email will be sent to you. In this email will be a link to a webpage which will allow you to enter a new password. This ensures that only a person with access to your registered email account will be able to change your password.'. Todo: make this default language aware?
    * name_label
      Optional. Text for the username field label. Defaults to 'User Name or Email Address'. Todo: make this default language aware?
    * name_field
      Optional. Name for the username HTML input field. Defaults to 'userid'.
    * name_class
      Optional. CSS class names to use on the username HTML text input element. Default is an empty class attribute.
    * login_uri
      a Optional. URI to return to the user login page. If supplied, a login link will be shown below the submit button. Default is not to display a login link.
    * login_label
      Optional. Text to display on the optional link back to the login page. Ignored unless the login_uri is supplied. Defaults to 'Return to the login page.'. Todo: make this default language aware?
    * links_class
      Optional. CSS class names to use on the optional 'return to login' link if required. Default is to omit the class attribute.
    * button_label
      Optional. Text to show on the form submit button. Defaults to 'Request Forgotten Password Email'. Todo: make this default language aware?
    * button_field
      Optional. Name for the submit button field. Defaults to 'password_email_submit'.
    * button_class
      Optional. CSS class names to use on the login submit button. Default is to omit the class attribute.

------

=== static method request_password_reset [line 414] ===

static array request_password_reset( string $userid, array $readAuth, [array $options = array()])

Sends a request to the indicia core module to send an email to the user directing them to the password reset process.

Tags:
return:  	containing:

    * The 'user_id' key hold the user_id for the authenticated user, or '0' if the login credentials are not valid for this website.
    * The 'site_role' as a string 'User', 'Editor' or 'Admin'. This is only returned if the 'getrole' option is true in the request options.

access:  	public


Parameters:
string   	$userid   	Required. The username or email value entered by the web site user.
array   	$readAuth   	Required. Array containing service authentication data obtained from get_read_auth().
array   	$options   	Optional. Options array with the following possibilities:

    * namecase
      Optional. Boolean defining if the username value should be treated as case sensitive when looking the user up on indicia core. Defaults to true.
